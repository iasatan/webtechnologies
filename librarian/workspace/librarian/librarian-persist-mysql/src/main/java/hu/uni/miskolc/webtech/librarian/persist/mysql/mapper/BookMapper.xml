<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="hu.uni.miskolc.webtech.librarian.persist.mysql.mapper.BookMapper">


	<resultMap type="Book" id="BookRM">
		<id property="bookId" column="bookId" javaType="int" jdbcType="INTEGER"/>
		<result property="title" column="title" />
		<collection property="genres" column="bookId" select="queryGenresOfBook"/>
		<collection property="authors" column="bookId" select="queryAuthorsOfBook"/>
	</resultMap>

	<select id="queryGenresOfBook" parameterType="int" resultType="Genre">
		select genre from genre where book = #{bookId};
	</select>

	<select id="queryAuthorsOfBook" parameterType="int" resultType="Author">
		select * from author where authorId in (select authorId from
		bookAuthor where bookId = #{bookId});
	</select>
	
	<select id="selectBooks" resultMap="BookRM">
		select * from book;
	</select>
	
	<select id="selectBooksByTitle" resultMap="BookRM">
		select * from book where title like #{title};	
	</select>
	
	<select id="selectBooksByAuthor" resultMap="BookRM">
		select * from book where bookId in (select bookId from bookAuthor where authorId = #{author.authorID});
	</select>
	
	<select id="selectBooksByGenre" resultMap="BookRM">
		select * from book where bookId in (select book from genre where genre like #{genre});
	</select>
	
	<select id="selectBookById" resultMap="BookRM">
		select * from book where bookId = #{bookId};
	</select>
	
	<delete id="deleteBookById">
		delete from bookInstance where instanceOfBook = #{bookId}; 
		delete from genre where book = #{bookId}; 
		delete from bookAuthor where bookId = #{bookId}; 
		delete from book where bookId = #{bookId};
	</delete>
	
	<delete id="removeAuthorFromBook">
		delete from bookAuthor where bookId = #{bookId} and authorId = #{authorId};
	</delete>
	
	<delete id="removeGenreFromBook">
		delete from genre where genre = #{genre} and book = #{bookId};
	</delete>
	
	<insert id="insertAuthorForBook">
		insert into bookAuthor(bookId,authorId) values (#{bookId},#{authorId});
	</insert>
	
	<insert id="insertGenreForBook">
		insert into genre(genre,book) values(#{genre},#{bookId});
	</insert>
	
	<update id="updateBook">
		update book set title = #{book.title} where bookId = #{book.bookId};
	</update>
	
	

	

</mapper>